%YAML:1.0

debug:       1
start_frame: 0

time_interval: 0.5
interval_process: 1
interval_vis: 20
flag_calib: 1
vis_all: 0

OptimizeFrames:  2
Evaluate.time_interval: 1.0

# PlaneExtractionMethod:
# 1 - PlaneExtraction
# 2 - PlaneSegmentation
PlaneExtractionMethod: 2

#--------------------------------------------------------------------------------------------
# global map
#--------------------------------------------------------------------------------------------

GlobalMap.scale: 1000.0

#--------------------------------------------------------------------------------------------
# motion estimation
#--------------------------------------------------------------------------------------------

MotionEstimationLine.use_plane:     1
MotionEstimationLine.use_line:      1
MotionEstimationLine.use_shadow:    0
MotionEstimationLine.use_line_res:  1

#--------------------------------------------------------------------------------------------
# intrinsic camera parameters
#--------------------------------------------------------------------------------------------

Camera.fx:          567.6
Camera.fy:          570.2
Camera.cx:          324.7
Camera.cy:          250.1
Camera.width:       640
Camera.height:      480
Camera.factor:      5000.0

Camera.m_fp:        2.85e-3
Camera.sigma_u:     0.5
Camera.sigma_v:     0.5

#--------------------------------------------------------------------------------------------
# plane extraction
#--------------------------------------------------------------------------------------------

PlaneExtraction.min_plane_size: 3000
PlaneExtraction.thres_angle:    3
PlaneExtraction.thres_dist:     0.1
PlaneExtraction.thres_color:    0.2

#--------------------------------------------------------------------------------------------
# plane segmentation
#--------------------------------------------------------------------------------------------

PlaneSegmentation.min_plane_size: 3000
PlaneSegmentation.thres_angle:    5
PlaneSegmentation.thres_dist:     0.1
PlaneSegmentation.thres_curv:     0.02

#--------------------------------------------------------------------------------------------
# line extraction
#--------------------------------------------------------------------------------------------

# HoughLinesP: distance resolution of the accumulator in pixels;
LineExtraction.HoughLinesP.rho:                1.0 

# HoughLinesP: angle resolution of the accumulator in degrees;
LineExtraction.HoughLinesP.theta:              1.0

# HoughLinesP: accumulator threshold paramter;
#              only those lines are returned that get enough votes (>threshold);
LineExtraction.HoughLinesP.threshold:          15 

# HoughLinesP: minimum line length;
#              line segments shorter than that are rejected;
LineExtraction.HoughLinesP.minLineLength:      10

# HoughLinesP: maximum allowed gap between points on the same line to link them;
LineExtraction.HoughLinesP.maxLineGap:         20

# line merging: angle between v (in deg);
LineExtraction.thres_sim_dir:      5
# line merging: angle between u (in deg);
LineExtraction.thres_sim_normal:   5
# line merging: |u1|-|u2|;
LineExtraction.thres_sim_dist:     0.03

# line splitting: distance between two neighboring points on the line;
LineExtraction.thres_split:        0.05

# minimum points on the line (less than that are rejected);
LineExtraction.min_points_on_line: 30

# associating line with its shadow;
# angle between u and u_pi (in deg);
LineExtraction.thres_line2shadow:  5.0

# associating shadow line with plane;
# |uxn+dv|
LineExtraction.thres_shadow2plane: 0.3

#--------------------------------------------------------------------------------------------
# edge point extration
#--------------------------------------------------------------------------------------------

# PCLOrganizedEdge: tolerance in meters for difference in depth between neighboring points;
EdgePointExtraction.PCLOrganizedEdge.DepthDisconThreshold: 0.03

# PCLOrganizedEdge: max search distance for deciding occluding and occluded edges;
EdgePointExtraction.PCLOrganizedEdge.MaxSearchNeighbors:   30

# # thres for searching of nearest occluding point in image plane;
# EdgePointExtraction.thres_pxl:              7.0
# # thres for associating the occluded points and planes;
# EdgePointExtraction.thres_occluded_dist:    0.1
# # ANNSearch: radius for searching for the neighboring occluding points;
# # for computing the covariance;
# EdgePointExtraction.ANN_search_radius:      0.1
# # ANNSearch: number of nearst neighbors to return;
# EdgePointExtraction.ANN_search_K:           50

#--------------------------------------------------------------------------------------------
# plane matching
#--------------------------------------------------------------------------------------------

PlaneMatching.thres_delta_angle:     10
PlaneMatching.thres_delta_d:         0.07
PlaneMatching.thres_color:           1.0

#--------------------------------------------------------------------------------------------
# line matching
#--------------------------------------------------------------------------------------------

LineMatching.thres_dir:            10.0
LineMatching.thres_normal:         10.0
LineMatching.thres_dist:           0.1
LineMatching.thres_delta_dir:      5.0
LineMatching.thres_delta_normal:   5.0
LineMatching.thres_delta_dist:     0.05






